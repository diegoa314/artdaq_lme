# FHiCL document used to run the "driver" executable. To learn more
#  about the FHiCL language, please look at
#  cdcvs.fnal.gov/redmine/documents/327 , the "FHiCL Quick Start Guide"

events_to_generate: 30000
#events_to_generate: 300
run_number: 101
transition_timeout: 30

#services: {
#    TimeTracker: {}
#}

fragment_receiver: {

   # Parameters defining and configuring the fragment generator to be used
   		    
   generator: ToySimulator 
   fragment_type: TOY2        # Make sure downstream modules know about this fragment_type!
   #nADCcounts: 524268         # nBytes = nADCcounts * 2 + 40, 1 MB
   nADCcounts: 5242860         # nBytes = nADCcounts * 2 + 40, 10 MB
   distribution_type: 3       # 0 is uniform, 1 is gaussian, 2 is monotonic, 3 is no initialization (fastest)
   throttle_usecs: 0
   random_seed: 6514

   # Parameters configuring the fragment generator's parent class
   # artdaq::CommandableFragmentGenerator

   fragment_id: 0
   board_id: 0
}  		  

event_builder: {
  expected_fragments_per_event: 1
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
  max_fragment_size_bytes: 0xb00000
  buffer_count: 30
}

metrics: {
  ProcFile: {
     metricPluginType: procFile
     pipe: "/tmp/eventQueueStats"
     names: [ "bytesRead", "queue%Used" ]
     level: 5
  }
}

######################################################################
# The ART code
######################################################################

physics: {
  analyzers: {
  }
  producers: {
    artdaqDemoBuildInfo:  {
      module_type: ArtdaqDemoBuildInfo
      ArtdaqDemoBuildInfo: myInstanceName
    }
  }
  p1: [ artdaqDemoBuildInfo ]
  e1: [ rootout ]
  end_paths: [ e1 ]
}

outputs: {
  rootout: {
    module_type: BinaryFileOutput
    fileName: "/dev/null"
    #fileName: "t.dat"
    directIO: false
  }
}

source: {
  module_type: DemoInput
  waiting_time: 900
  resume_after_timeout: true
}

process_name: Driver



