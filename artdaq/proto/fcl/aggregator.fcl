services: {
  scheduler: {
    fileMode: NOMERGE
    errorOnFailureToPut: false
  }
  NetMonTransportServiceInterface: {
    service_provider: NetMonTransportService
  }

  #SimpleMemoryCheck: { }
}

daq: {
  aggregator: {
    expected_events_per_bunch: 1
    print_event_store_stats: true
    event_queue_depth: 20
    event_queue_wait_time: 5
    onmon_event_prescale: 1
    is_data_logger: true
    art_thread_wait_ms: 4000

	auto_suppression_enabled: false
	sources: {
		s0: { transferPluginType: Shmem source_rank: 0 max_fragment_size_words: 20971520 }
	}
  }

  metrics: {
    aggFile: {
      metricPluginType: "file"
      level: 3
      fileName: "/tmp/aggregator/agg_%UID%_metrics.log"
      uniquify: true
    }
     ganglia: {
       metricPluginType: "ganglia"
       level: 3
       reporting_interval: 15.0
     
       configFile: "/etc/ganglia/gmond.conf"
       group: "ARTDAQ"
     }
    # msgfac: {
    #    level: %{mf_level}
    #    metricPluginType: "msgFacility"
    #    output_message_application_name: "ARTDAQ Metric"
    #    output_message_severity: 0 
    # }
    # graphite: {
    #   level: %{graphite_level}
    #   metricPluginType: "graphite"
    #   host: "localhost"
    #   port: 20030
    #   namespace: "artdaq."
    # }
  }

  # transfer_to_dispatcher: {
  #   transferPluginType: Shmem
  # 	source_rank: 4
  # 	destination_rank: 8
  #     max_fragment_size_words: 2097152
  #   }

}

source: {
  module_type: NetMonInput
}
outputs: {
  normalOutput: {
    module_type: RootOutput
    fileName: "/tmp/artdaqdemo_r%06r_sr%02s_%to_%#_0.root"
    fileProperties: { maxSubRuns: 1 maxRuns: 1  }
    fastCloning: false
    compressionLevel: 3
  }

  #normalOutputMod2: {
  #  module_type: RootOutput
  #  fileName: "/tmp/artdaqdemo_r%06r_sr%02s_%to_%#_0_mod2.root"
  #  SelectEvents: { SelectEvents: [ pmod2 ] }
  #   fileProperties: { maxSubRuns: 1 maxRuns: 1  }
  #  fastCloning: false
  #  compressionLevel: 3
  #}

  #normalOutputMod3: {
  #  module_type: RootOutput
  #  fileName: "/tmp/artdaqdemo_r%06r_sr%02s_%to_%#_0_mod3.root"
  #  SelectEvents: { SelectEvents: [ pmod3 ] }
  #   fileProperties: { maxSubRuns: 1 maxRuns: 1  }
  #  fastCloning: false
  #  compressionLevel: 3
  #}

}
physics: {
  analyzers: {


   checkintegrity: {
     module_type: CheckIntegrity
     raw_data_label: daq
     frag_type: TOY1
   }

  }

  producers: {

     BuildInfo:
     {
       module_type: ArtdaqDemoBuildInfo
       instance_name: ArtdaqDemo
     }
   }

  filters: {

    prescaleMod2: {
       module_type: NthEvent
       nth: 2
    }

    prescaleMod3: {
       module_type: NthEvent
       nth: 3
    }
  }

  p2: [ BuildInfo ]
  pmod2: [ prescaleMod2 ]
  pmod3: [ prescaleMod3 ]

  #a1: [ app, wf]

  my_output_modules: [ normalOutput ]
  #my_output_modules: [ normalOutputMod2, normalOutputMod3 ]
}
process_name: DAQAG
