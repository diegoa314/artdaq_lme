genToArt:
{
  run_number: 10
  events_to_generate: 5
  fragment_receiver:
  {
    generators: [ gen ]
    gen:
    {
      generator: GenericFragmentSimulator
      payload_size: 10
      content_selection: 3 
   }
  }

  event_builder:
  {
    event_queue_depth: 20
    event_queue_wait_time: 5.0
    print_event_store_stats: false
    fragment_receiver_count: 1
    use_art: true
    verbose: false
  }
}


source:
{
  module_type: RawInput
  waiting_time: 25.0
  fragment_type_map: [[226, "ABC"]]
}

outputs: {
  binaryNetOutput: {
    module_type: BinaryNetOutput
    max_fragment_size_words: 2097152
    mpi_buffer_count: 32    
    first_event_builder_rank: 1
    event_builder_count: 1
  }
}

physics: {
  analyzers: {}
  producers: {}
  filters: { }
  my_output_modules: [ binaryNetOutput ]
}

process_name: TEST
